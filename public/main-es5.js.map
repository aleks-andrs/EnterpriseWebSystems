{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/guard.auth.ts","webpack:///src/app/services/sharing.service.ts","webpack:///src/app/services/str.encryption.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/app/views/decoding/decoding.component.ts","webpack:///src/app/views/decoding/decoding.component.html","webpack:///src/app/views/encoding/encoding.component.ts","webpack:///src/app/views/encoding/encoding.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/login/login.component.ts","webpack:///src/app/views/login/login.component.html","webpack:///src/app/views/passwordmanager/passwordmanager.component.ts","webpack:///src/app/views/passwordmanager/passwordmanager.component.html","webpack:///src/app/views/register/register.component.ts","webpack:///src/app/views/register/register.component.html","webpack:///src/app/views/selection/selection.component.ts","webpack:///src/app/views/selection/selection.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","providers","bootstrap","FooterComponent","NavbarComponent","validateService","apiService","router","logoutUser","navigate","ApiService","http","helperService","user","httpOptions","headers","post","keyList","loadToken","authToken","put","token","localStorage","setItem","JSON","stringify","clear","get","getItem","id_token","undefined","isTokenExpired","imageUrl","responseType","providedIn","AuthGuard","loggedIn","SharingService","data","StrEncryptionService","secretKey","value","encrypt","trim","toString","textToDecrypt","decrypt","Utf8","passStr","ValidateService","name","username","password","acceptableInput","extendedAcceptableInput","match","givenString","length","DecodingComponent","strEncryptionService","flashMessages","isDisabled","decryptionKey","validateEntry","show","cssClass","timeout","validateEntryLength","originalCanvas","document","createElement","selectedImageElement","getElementById","canvasWidth","naturalWidth","canvasHeight","naturalHeight","height","width","originalContext","getContext","drawImage","origImageData","getImageData","pixelData","binaryTxt","stopFlagCount","i","n","pixelValue","bit","join","newBinary","split","splice","binaryCode","push","String","fromCharCode","parseInt","encryptedText","setPassword","decryptedTextMessage","decryptedText","err","element","addEventListener","uploadImage","click","event","file","target","files","type","indexOf","innerHTML","reader","FileReader","image","Image","readAsDataURL","onloadend","src","URL","createObjectURL","onload","imageElement","alert","onClickBrowse","onClickDecrypt","EncodingComponent","sharingService","isVisible","imageSrc","getImageSrc","console","log","getSavedDetails","subscribe","res","info","encryptionPassword","newData","updateUserInfo","success","msg","textToEncrypt","imgWidth","imgHeight","convertTextToBinary","encodeBinaryIntoImage","cryptoText","zeroPad","idx","slice","replace","charCodeAt","newCanvas","newCanvasContext","lengthBinary","Math","ceil","counter","putImageData","newImage","toDataURL","generatedImageElement","onClickEncrypt","HomeComponent","LoginComponent","validateLogin","validateAlphaNumericLogin","authenticateUser","storeUserData","onLogin","PasswordmanagerComponent","selectedKey","index","RegisterComponent","validateRegister","validateAlphaNumericRegister","registerUser","onRegister","SelectionComponent","text","getImagesFromAPI","setImageSrc","getImage","image1","result","error","image2","image3","image4","image5","image6","image7","image8","image9","onClickGet","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,MAAvB;AAA+BC,gBAAU,EAAE;AAA3C,KADqB,EAErB;AAAEF,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KAFqB,EAGrB;AAAEH,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KAHqB,EAIrB;AAAEH,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KAJqB,EAKrB;AAAEH,UAAI,EAAE,iBAAR;AAA2BG,eAAS,EAAE,yGAAtC;AAAgEC,iBAAW,EAAC,CAAC,8DAAD;AAA5E,KALqB,EAMrB;AAAEJ,UAAI,EAAE,WAAR;AAAqBG,eAAS,EAAE;AAAhC,KANqB,EAOrB;AAAEH,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KAPqB,EAQrB;AAAEH,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KARqB,CAAvB;;QAeaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBM,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBP,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC3B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaW,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,kBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,iF;AAAA;AAAA;ACPzB;;AACE;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;;;;;;;;sEDAaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzqDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAVT,CACT;AAAEC,eAAO,EAAE,8DAAX;AAAwBC,gBAAQ,EAAE;AAAlC,OADS,EAET,mEAFS,EAGT,iEAHS,EAIT,2EAJS,EAKT,yEALS,EAMT,+DANS,C;AAOV,gBAdQ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,4EAAoBT,OAApB,EALO,CAcR;;;;0HAGUO,S,EAAS;AAAA,uBA5BlB,2DA4BkB,EA3BlB,wEA2BkB,EA1BlB,uFA0BkB,EAzBlB,qFAyBkB,EAxBlB,qFAwBkB,EAvBlB,4EAuBkB,EAtBlB,qFAsBkB,EArBlB,0GAqBkB,EApBlB,yEAoBkB,EAnBlB,yEAmBkB;AAnBH,kBAGf,uEAHe,EAIf,oEAJe,EAKf,qEALe,EAMf,0DANe,EAMJ,2EANI;AAmBG,O;AAbP,K;;;;;sEAaFA,S,EAAS;cA9BrB,sDA8BqB;eA9BZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,uFAHY,EAIZ,qFAJY,EAKZ,qFALY,EAMZ,4EANY,EAOZ,qFAPY,EAQZ,0GARY,EASZ,yEATY,EAUZ,yEAVY,CADN;AAaRT,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,4EAAoBD,OAApB,EALO,CAbD;AAoBRW,mBAAS,EAAE,CACT;AAAEH,mBAAO,EAAE,8DAAX;AAAwBC,oBAAQ,EAAE;AAAlC,WADS,EAET,mEAFS,EAGT,iEAHS,EAIT,2EAJS,EAKT,yEALS,EAMT,+DANS,CApBH;AA4BRG,mBAAS,EAAE,CAAC,2DAAD;AA5BH,S;AA8BY,Q;;;;;;;;;;;;;;;;;;ACrDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA;AAAA;ACP5B;;AACE;;AAAG;;AAAqB;;AAC1B;;;;;;;;sEDKaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTT,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBU;;AAA0E;;AAAgB;;;;;;AAK1F;;AAAiE;;AAAK;;;;;;AAGtE;;AAAoE;;AAAQ;;;;;;;;AAG5E;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAA4D;;AAAM;;;;QDnBhGQ,e;AAEX,+BACUC,eADV,EAESC,UAFT,EAGUC,MAHV,EAGwB;AAAA;;AAFd,aAAAF,eAAA,GAAAA,eAAA;AACD,aAAAC,UAAA,GAAAA,UAAA;AACC,aAAAC,MAAA,GAAAA,MAAA;AACL;;;;mCAEG,CACP;;;wCAEY;AACX,eAAKD,UAAL,CAAgBE,UAAhB;AACA,eAAKD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBAfUL,e,EAAe,2I,EAAA,iI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,shC;AAAA;AAAA;ACT1B;;AACE;;AAAqC;;AAAc;;AACnD;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAqC;;AAAQ;;AAC/C;;AACA;;AACE;;AAAqC;;AAAQ;;AAC/C;;AACA;;AACE;;AAAsC;;AAAe;;AACvD;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACJ;;;;AAfa;;AAAA;;AAKA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDnBAA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTV,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASac,U;AAIX,0BACUC,IADV,EAEUC,aAFV,EAEyC;AAAA;;AAD/B,aAAAD,IAAA,GAAAA,IAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACL,O,CAEL;;;;;qCACaC,I,EAAI;AACf,cAAIC,WAAW,GAAG;AAChBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAgB;AADO,aAAhB;AADO,WAAlB;AAKA,iBAAO,KAAKJ,IAAL,CAAUK,IAAV,CAAoB,gBAApB,EAAsCH,IAAtC,EAA4CC,WAA5C,CAAP;AACD,S,CAED;;;;yCACiBD,I,EAAI;AACnB,cAAIC,WAAW,GAAG;AAChBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAgB;AADO,aAAhB;AADO,WAAlB;AAKA,iBAAO,KAAKJ,IAAL,CAAUK,IAAV,CAAoB,oBAApB,EAA0CH,IAA1C,EAAgDC,WAAhD,CAAP;AACD,S,CAED;;;;uCACeG,O,EAAO;AACpB,eAAKC,SAAL;AACA,cAAIJ,WAAW,GAAG;AAChBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAgB,kBADO;AAEvB,+BAAiB,KAAKI;AAFC,aAAhB;AADO,WAAlB;AAMA,iBAAO,KAAKR,IAAL,CAAUS,GAAV,CAAmB,cAAnB,EAAmCH,OAAnC,EAA4CH,WAA5C,CAAP;AACD;;;sCAEaO,K,EAAOR,I,EAAI;AACvBS,sBAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAC,sBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAA7B;AACA,eAAKM,SAAL,GAAiBE,KAAjB;AACA,eAAKR,IAAL,GAAYA,IAAZ;AACD;;;qCAES;AACR,eAAKM,SAAL,GAAiB,IAAjB;AACA,eAAKN,IAAL,GAAY,IAAZ;AACAS,sBAAY,CAACI,KAAb;AACD;;;0CAEc;AACb,eAAKR,SAAL;AACA,cAAIJ,WAAW,GAAG;AAChBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAgB,kBADO;AAEvB,+BAAiB,KAAKI;AAFC,aAAhB;AADO,WAAlB;AAMA,iBAAO,KAAKR,IAAL,CAAUgB,GAAV,CAAmB,eAAnB,EAAoCb,WAApC,CAAP;AACD,S,CAED;;;;oCACS;AACP,cAAMO,KAAK,GAAGC,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAd;AACA,eAAKT,SAAL,GAAiBE,KAAjB;AACD;;;mCAEO;AACN,cAAIT,aAAa,GAAG,IAAI,mEAAJ,EAApB;;AACA,cAAGU,YAAY,CAACO,QAAb,IAAyBC,SAA5B,EAAsC;AACpC,mBAAO,KAAP;AACD;;AACD,iBAAO,CAAClB,aAAa,CAACmB,cAAd,CAA6BT,YAAY,CAACO,QAA1C,CAAR;AACD;;;iCAEQG,Q,EAAgB;AACvB,iBAAO,KAAKrB,IAAL,CAAUgB,GAAV,CAAcK,QAAd,EAAwB;AAAEC,wBAAY,EAAE;AAAhB,WAAxB,CAAP;AACD;;;;;;;uBAjFUvB,U,EAAU,uH,EAAA,2H;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVwB,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,S;AACX,yBACU7B,UADV,EAEUC,MAFV,EAEwB;AAAA;;AADd,aAAAD,UAAA,GAAAA,UAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACL;;;;sCAEM;AACT,cAAG,KAAKD,UAAL,CAAgB8B,QAAhB,EAAH,EAA8B;AAC5B,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,iBAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAbU0B,S,EAAS,+G,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS;;;;;sEAATA,S,EAAS;cADrB;AACqB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACLtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaE,c;AADb;AAAA;;AAEY,aAAAC,IAAA,GAAWR,SAAX;AAWX,O,CATG;;;;;oCACYQ,I,EAAQ;AAChB,eAAKA,IAAL,GAAYA,IAAZ;AACH,S,CAED;;;;sCACW;AACP,iBAAO,KAAKA,IAAZ;AACH;;;;;;;uBAXQD,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;ACH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAMaE,oB;AAGX,sCAAc;AAAA;;AAFd,aAAAC,SAAA,GAAY,WAAZ;AAEiB;;;;gCAETC,K,EAAgB;AACtB,iBAAO,8CAAaC,OAAb,CAAqBD,KAArB,EAA4B,KAAKD,SAAL,CAAeG,IAAf,EAA5B,EAAmDC,QAAnD,EAAP;AACD;;;gCAEOC,a,EAAsB;AAC5B,iBAAO,8CAAaC,OAAb,CAAqBD,aAArB,EAAoC,KAAKL,SAAL,CAAeG,IAAf,EAApC,EAA2DC,QAA3D,CAAoE,8CAAaG,IAAjF,CAAP;AACD;;;oCAEWC,O,EAAgB;AAC1B,eAAKR,SAAL,GAAiBQ,OAAjB;AACD;;;;;;;uBAfUT,oB;AAAoB,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVL,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;ACNjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKae,e;AAEX,iCAAc;AAAA;AAAG,O,CAEjB;;;;;yCACiBpC,I,EAAI;AACnB,cAAGA,IAAI,CAACqC,IAAL,IAAapB,SAAb,IAA0BjB,IAAI,CAACsC,QAAL,IAAiBrB,SAA3C,IAAwDjB,IAAI,CAACuC,QAAL,IAAiBtB,SAAzE,IAAsFjB,IAAI,CAACqC,IAAL,IAAa,EAAnG,IAAyGrC,IAAI,CAACsC,QAAL,IAAiB,EAA1H,IAAgItC,IAAI,CAACuC,QAAL,IAAiB,EAApJ,EAAuJ;AACrJ,mBAAO,KAAP;AACD,WAFD,MAEM;AACJ,mBAAO,IAAP;AACD;AACF,S,CAED;;;;sCACcvC,I,EAAI;AAChB,cAAGA,IAAI,CAACsC,QAAL,IAAiBrB,SAAjB,IAA8BjB,IAAI,CAACuC,QAAL,IAAiBtB,SAA/C,IAA4DjB,IAAI,CAACsC,QAAL,IAAiB,EAA7E,IAAmFtC,IAAI,CAACuC,QAAL,IAAiB,EAAvG,EAA0G;AACxG,mBAAO,KAAP;AACD,WAFD,MAEM;AACJ,mBAAO,IAAP;AACD;AACF,S,CAED;;;;qDAC6BvC,I,EAAI;AAC/B,cAAIwC,eAAe,GAAG,gBAAtB;AACA,cAAIC,uBAAuB,GAAG,gCAA9B;;AACA,cAAGzC,IAAI,CAACqC,IAAL,CAAUK,KAAV,CAAgBD,uBAAhB,KAA4CzC,IAAI,CAACsC,QAAL,CAAcI,KAAd,CAAoBF,eAApB,CAA5C,IAAoFxC,IAAI,CAACuC,QAAL,CAAcG,KAAd,CAAoBF,eAApB,CAAvF,EAA4H;AAC1H,mBAAO,IAAP;AACD,WAFD,MAEM;AACJ,mBAAO,KAAP;AACD;AACF,S,CAED;;;;kDAC0BxC,I,EAAI;AAC5B,cAAIwC,eAAe,GAAG,gBAAtB;;AACA,cAAGxC,IAAI,CAACsC,QAAL,CAAcI,KAAd,CAAoBF,eAApB,KAAwCxC,IAAI,CAACuC,QAAL,CAAcG,KAAd,CAAoBF,eAApB,CAA3C,EAAgF;AAC9E,mBAAO,IAAP;AACD,WAFD,MAEM;AACJ,mBAAO,KAAP;AACD;AACF,S,CAED;;;;sCACcG,W,EAAW;AACvB,cAAGA,WAAW,IAAI1B,SAAf,IAA4B0B,WAAW,CAACC,MAAZ,GAAqB,CAApD,EAAsD;AACpD,mBAAO,KAAP;AACD,WAFD,MAEM;AACJ,mBAAO,IAAP;AACD;AACF,S,CAED;;;;4CACoBD,W,EAAW;AAC7B,cAAGA,WAAW,CAACC,MAAZ,GAAqB,CAArB,IAA0BD,WAAW,CAACC,MAAZ,GAAqB,EAAlD,EAAqD;AACnD,mBAAO,KAAP;AACD,WAFD,MAEM;AACJ,mBAAO,IAAP;AACD;AACF;;;;;;;uBA3DUR,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVf,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC+BI;;AAA6G;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAU;;;;;;AACpJ;;AAAgI;;AAAU;;;;AAA5B;;;;QDpBrGwB,iB;AAKX,iCACUC,oBADV,EAEUtD,eAFV,EAGSC,UAHT,EAIUsD,aAJV,EAKUrD,MALV,EAKwB;AAAA;;AAJd,aAAAoD,oBAAA,GAAAA,oBAAA;AACA,aAAAtD,eAAA,GAAAA,eAAA;AACD,aAAAC,UAAA,GAAAA,UAAA;AACC,aAAAsD,aAAA,GAAAA,aAAA;AACA,aAAArD,MAAA,GAAAA,MAAA;AACL;;;;mCAEG;AACN,eAAKsD,UAAL,GAAkB,KAAlB;AACD,S,CAGD;;;;2CACgB;AACd,eAAKtD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,S,CAGD;;;;yCACiB;AACf;AACAqD,uBAAa,EAAE,KAAKA,aAAL,CAFA,CAGf;;;AACA,cAAG,CAAC,KAAKzD,eAAL,CAAqB0D,aAArB,CAAmC,KAAKD,aAAxC,CAAJ,EAA2D;AACzD,iBAAKF,aAAL,CAAmBI,IAAnB,CAAwB,2BAAxB,EAAqD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAArD;AACA,mBAAO,KAAP;AACD;;AACD,cAAG,CAAC,KAAK7D,eAAL,CAAqB8D,mBAArB,CAAyC,KAAKL,aAA9C,CAAJ,EAAiE;AAC/D,iBAAKF,aAAL,CAAmBI,IAAnB,CAAwB,6CAAxB,EAAuE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAvE;AACA,mBAAO,KAAP;AACD,WAXc,CAaf;;;AACA,cAAIE,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAArB;AACA,cAAIC,oBAAoB,GAAqBF,QAAQ,CAACG,cAAT,CAAwB,eAAxB,CAA7C;AACA,cAAIC,WAAW,GAAGF,oBAAoB,CAACG,YAAvC;AACA,cAAIC,YAAY,GAAGJ,oBAAoB,CAACK,aAAxC,CAjBe,CAkBf;;AACAR,wBAAc,CAACS,MAAf,GAAwBF,YAAxB;AACAP,wBAAc,CAACU,KAAf,GAAuBL,WAAvB,CApBe,CAqBf;;AACA,cAAIM,eAAe,GAAGX,cAAc,CAACY,UAAf,CAA0B,IAA1B,CAAtB,CAtBe,CAuBf;;AACAD,yBAAe,CAACE,SAAhB,CAA0BV,oBAA1B,EAAgD,CAAhD,EAAmD,CAAnD,EAxBe,CAyBf;;AACA,cAAIW,aAAa,GAAGH,eAAe,CAACI,YAAhB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmCV,WAAnC,EAAgDE,YAAhD,CAApB;AACA,cAAIS,SAAS,GAAGF,aAAa,CAAC5C,IAA9B;AACA,cAAI+C,SAAS,GAAG,EAAhB;AACA,cAAIC,aAAa,GAAG,CAApB,CA7Be,CA8Bf;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,SAAS,CAAC3B,MAA9B,EAAsC8B,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,IAAI,CAAlD,EAAqD;AACnD,iBAAK,IAAIE,UAAU,GAAE,CAArB,EAAwBA,UAAU,GAAG,CAArC,EAAwCA,UAAU,EAAlD,EAAuD;AACrD,kBAAIC,GAAG,GAAG,CAAV;;AACA,kBAAGN,SAAS,CAACG,CAAC,GAAGE,UAAL,CAAT,GAA2B,CAA3B,IAAgC,CAAnC,EAAsC;AACpCC,mBAAG,GAAG,CAAN,CADoC,CAEpC;;AACAJ,6BAAa,GAAG,CAAhB;AACD;;AACDA,2BAAa,IAAI,CAAjB;AACAD,uBAAS,IAAIK,GAAb,CARqD,CASrD;;AACA,kBAAGJ,aAAa,GAAC,EAAjB,EAAoB;AAClB;AACD;AACF;AACF,WA9Cc,CA+Cf;;;AACAD,mBAAS,GAAGA,SAAS,CAAC9B,KAAV,CAAgB,SAAhB,EAA2BoC,IAA3B,CAAgC,GAAhC,CAAZ,CAhDe,CAiDf;;AACA,cAAIC,SAAS,GAAGP,SAAS,CAACQ,KAAV,CAAgB,GAAhB,CAAhB,CAlDe,CAmDf;;AACA,cAAGD,SAAS,CAAC,CAAD,CAAT,IAAc,UAAd,IAA4BA,SAAS,CAAC,CAAD,CAAT,IAAc,UAA7C,EAAwD;AACtD;AACCA,qBAAS,CAACE,MAAV,CAAiB,CAAjB,EAAmB,CAAnB;AACF,WAHD,MAGM;AACJ,iBAAKlC,aAAL,CAAmBI,IAAnB,CAAwB,2CAAxB,EAAqE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAArE;AACA;AACD;;AACD,cAAI6B,UAAU,GAAG,EAAjB,CA3De,CA4Df;;AACA,eAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGK,SAAS,CAACnC,MAA1B,EAAkC8B,CAAC,EAAnC,EAAuC;AACrC,gBAAGK,SAAS,CAACL,CAAD,CAAT,IAAgB,UAAnB,EAA8B;AAC5BQ,wBAAU,CAACC,IAAX,CAAgBC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACP,SAAS,CAACL,CAAD,CAAV,EAAe,CAAf,CAA5B,CAAhB;AACD,aAFD,MAEM;AACJ;AACD;AACF,WAnEc,CAoEf;;;AACA,cAAIa,aAAa,GAAGL,UAAU,CAACJ,IAAX,CAAgB,EAAhB,CAApB,CArEe,CAsEf;;AACA,eAAKhC,oBAAL,CAA0B0C,WAA1B,CAAsC,KAAKvC,aAA3C,EAvEe,CAwEf;;AACA,cAAI;AACF,gBAAIwC,oBAAoB,GAAG,KAAK3C,oBAAL,CAA0Bb,OAA1B,CAAkCsD,aAAlC,CAA3B;;AACA,gBAAGE,oBAAoB,IAAI,EAAxB,IAA8BA,oBAAoB,IAAIxE,SAAzD,EAAmE;AACjE,oBAAM,OAAN;AACD,aAJC,CAKF;;;AACA,iBAAK+B,UAAL,GAAkB,IAAlB;AACA,iBAAK0C,aAAL,GAAqBD,oBAArB;AACD,WARD,CAQE,OAAME,GAAN,EAAU;AACV,iBAAK3C,UAAL,GAAkB,KAAlB;AACA,iBAAKD,aAAL,CAAmBI,IAAnB,CAAwB,6CAAxB,EAAuE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAvE;AACD;AACF,S,CAGD;;;;wCACa;AACX,cAAIuC,OAAO,GAAgBpC,QAAQ,CAACG,cAAT,CAAwB,YAAxB,CAA3B;AACAiC,iBAAO,CAACC,gBAAR,CAAyB,QAAzB,EAAmC,KAAKC,WAAxC;AACAF,iBAAO,CAACG,KAAR;AACD,S,CAED;;;;oCACYC,K,EAAU;AACpB,cAAIC,IAAI,GAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ,CADoB,CAEpB;;AACA,cAAGF,IAAI,CAACG,IAAL,CAAUC,OAAV,CAAkB,OAAlB,MAA+B,CAAC,CAAnC,EAAqC;AACnC;AACA7C,oBAAQ,CAACG,cAAT,CAAwB,WAAxB,EAAqC2C,SAArC,GAAiDL,IAAI,CAAC5D,IAAtD,CAFmC,CAGnC;;AACA,gBAAIkE,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,gBAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAH,kBAAM,CAACI,aAAP,CAAqBV,IAArB;;AACAM,kBAAM,CAACK,SAAP,GAAmB,YAAY;AAC7BH,mBAAK,CAACI,GAAN,GAAYC,GAAG,CAACC,eAAJ,CAAoBd,IAApB,CAAZ;;AACAQ,mBAAK,CAACO,MAAN,GAAe;AACb,oBAAIC,YAAY,GAAqBzD,QAAQ,CAACG,cAAT,CAAwB,eAAxB,CAArC;AACAsD,4BAAY,CAACJ,GAAb,GAAmBJ,KAAK,CAACI,GAAzB;AACD,eAHD;AAID,aAND;AAOD,WAdD,MAcO;AACLK,iBAAK,CAAC,oCAAD,CAAL;AACD;AACF;;;;;;;uBA7IUrE,iB,EAAiB,sJ,EAAA,2I,EAAA,iI,EAAA,6I,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,4sC;AAAA;AAAA;ACX9B;;AACC;;AACC;;AAAI;;AAAW;;AAChB;;AACA;;AACC;;AACC;;AAAG;;AAA0J;;AAC9J;;AAEA;;AACC;;AACC;;AACA;;AAA+E;AAAA,mBAAS,IAAAsE,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAS;;AACnH;;AACA;;AACC;;AAAsB;;AAAY;;AACnC;;AACA;;AACC;;AACD;;AACD;;AAEA;;AACC;;AACC;;AAAwF;AAAA;AAAA;;AAAxF;;AACD;;AACA;;AACC;;AAA+E;AAAA,mBAAS,IAAAC,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAM;;AACjH;;AACA;;AACC;;AACA;;AACD;;AACA;;AACC;;AAA2G;AAAA;AAAA;;AAAiD;;AAC7J;;AACD;;AACD;;AACD;;;;AAd4F;;AAAA;;AAMhF;;AAAA;;AACA;;AAAA;;AAGsC;;AAAA,gGAAwB,SAAxB,EAAwB,iBAAxB;;;;;;;;;sEDvBrCvE,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThE,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACwCI;;AAA6G;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAQ;;;;;;AAChJ;;AAAgI;;AAAQ;;;;AAA1B;;;;QD7BrGsI,iB;AAQX,iCACUvE,oBADV,EAEUtD,eAFV,EAGU8H,cAHV,EAIS7H,UAJT,EAKUsD,aALV,EAK6C;AAAA;;AAJnC,aAAAD,oBAAA,GAAAA,oBAAA;AACA,aAAAtD,eAAA,GAAAA,eAAA;AACA,aAAA8H,cAAA,GAAAA,cAAA;AACD,aAAA7H,UAAA,GAAAA,UAAA;AACC,aAAAsD,aAAA,GAAAA,aAAA;AACL;;;;mCAEM;AAAA;;AACT,eAAKwE,SAAL,GAAiB,KAAjB;AACA,eAAKC,QAAL,GAAgB,KAAKF,cAAL,CAAoBG,WAApB,EAAhB;;AACA,cAAG;AACD,gBAAG,KAAKD,QAAR,EAAiB;AACf,kBAAIP,YAAY,GAAqBzD,QAAQ,CAACG,cAAT,CAAwB,eAAxB,CAArC;AACAsD,0BAAY,CAACJ,GAAb,GAAmB,KAAKW,QAAxB;AACD;AACF,WALD,CAKE,OAAM7B,GAAN,EAAU;AACV+B,mBAAO,CAACC,GAAR,CAAYhC,GAAZ;AACD;;AAID,cAAG,KAAKlG,UAAL,CAAgB8B,QAAhB,EAAH,EAA8B;AAC5B;AACA,iBAAK9B,UAAL,CAAgBmI,eAAhB,GAAkCC,SAAlC,CAA6C,UAAAC,GAAG,EAAI;AAClD,kBAAIrG,IAAI,GAAG,EAAX;AACAA,kBAAI,GAAGqG,GAAP;AACA,mBAAI,CAAC9H,IAAL,GAAYyB,IAAI,CAACzB,IAAjB;AACA,mBAAI,CAACI,OAAL,GAAe,KAAI,CAACJ,IAAL,CAAU+H,IAAzB;AACD,aALD,EAMA,UAAApC,GAAG,EAAI;AACL+B,qBAAO,CAACC,GAAR,CAAYhC,GAAZ;AACA,qBAAO,KAAP;AACD,aATD;AAUD;AACF;;;yCAEa;AAAA;;AACZqC,4BAAkB,EAAE,KAAKA,kBAAL,CADR,CAEZ;;;AACA,cAAG,CAAC,KAAKxI,eAAL,CAAqB0D,aAArB,CAAmC,KAAK8E,kBAAxC,CAAJ,EAAgE;AAC9D,iBAAKjF,aAAL,CAAmBI,IAAnB,CAAwB,2BAAxB,EAAqD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAArD;AACA,mBAAO,KAAP;AACD;;AACD,cAAG,CAAC,KAAK7D,eAAL,CAAqB8D,mBAArB,CAAyC,KAAK0E,kBAA9C,CAAJ,EAAsE;AACpE,iBAAKjF,aAAL,CAAmBI,IAAnB,CAAwB,6CAAxB,EAAuE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAvE;AACA,mBAAO,KAAP;AACD,WAVW,CAWZ;;;AACA,eAAKjD,OAAL,CAAa+E,IAAb,CAAkB,KAAK6C,kBAAvB,EAZY,CAaZ;;AACA,cAAIC,OAAO,GAAG;AACZF,gBAAI,EAAE,KAAK3H;AADC,WAAd;AAGA,eAAKX,UAAL,CAAgByI,cAAhB,CAA+BD,OAA/B,EAAwCJ,SAAxC,CAAmD,UAAAC,GAAG,EAAI;AACxD,gBAAGA,GAAG,CAACK,OAAP,EAAe;AACb,oBAAI,CAACpF,aAAL,CAAmBI,IAAnB,CAAwB2E,GAAG,CAACM,GAA5B,EAAiC;AAAChF,wBAAQ,EAAE,eAAX;AAA4BC,uBAAO,EAAC;AAApC,eAAjC;AACD,aAFD,MAEM;AACJ,oBAAI,CAACN,aAAL,CAAmBI,IAAnB,CAAwB2E,GAAG,CAACM,GAA5B,EAAiC;AAAChF,wBAAQ,EAAE,cAAX;AAA2BC,uBAAO,EAAC;AAAnC,eAAjC;AACD;AACF,WAND,EAOA,UAAAsC,GAAG,EAAI;AACL+B,mBAAO,CAACC,GAAR,CAAYhC,GAAZ;AACA,mBAAO,KAAP;AACD,WAVD;AAWD;;;yCAEgB;AACf;AACA0C,uBAAa,EAAE,KAAKA,aAAL;;AACfL,4BAAkB,EAAE,KAAKA,kBAAL,CAHL,CAIf;;;AACA,cAAG,CAAC,KAAKxI,eAAL,CAAqB0D,aAArB,CAAmC,KAAKmF,aAAxC,CAAJ,EAA2D;AACzD,iBAAKtF,aAAL,CAAmBI,IAAnB,CAAwB,iCAAxB,EAA2D;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAA3D;AACA,mBAAO,KAAP;AACD,WARc,CASf;;;AACA,cAAG,CAAC,KAAK7D,eAAL,CAAqB0D,aAArB,CAAmC,KAAK8E,kBAAxC,CAAJ,EAAgE;AAC9D,iBAAKjF,aAAL,CAAmBI,IAAnB,CAAwB,wBAAxB,EAAkD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAlD;AACA,mBAAO,KAAP;AACD;;AACD,cAAG,CAAC,KAAK7D,eAAL,CAAqB8D,mBAArB,CAAyC,KAAK0E,kBAA9C,CAAJ,EAAsE;AACpE,iBAAKjF,aAAL,CAAmBI,IAAnB,CAAwB,6CAAxB,EAAuE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAvE;AACA,mBAAO,KAAP;AACD,WAjBc,CAkBf;;;AACA,eAAKP,oBAAL,CAA0B0C,WAA1B,CAAsC,KAAKwC,kBAA3C,EAnBe,CAoBf;;AACA,cAAIzC,aAAa,GAAG,KAAKzC,oBAAL,CAA0BjB,OAA1B,CAAkC,KAAKwG,aAAvC,CAApB,CArBe,CAuBf;;AACA,cAAIpB,YAAY,GAAqBzD,QAAQ,CAACG,cAAT,CAAwB,eAAxB,CAArC;AACA,cAAI2E,QAAQ,GAAGrB,YAAY,CAACpD,YAA5B;AACA,cAAI0E,SAAS,GAAGtB,YAAY,CAAClD,aAA7B,CA1Be,CA4Bf;;AACA,cAAK,CAACwB,aAAa,CAAC3C,MAAd,GAAqB,EAAtB,IAA4B,CAA7B,GAAmC2F,SAAS,GAAGD,QAAZ,GAAuB,CAA9D,EAAkE;AAChE,iBAAKvF,aAAL,CAAmBI,IAAnB,CAAwB,4CAAxB,EAAsE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAtE;AACA;AACD,WAhCc,CAiCf;;;AACA,cAAI6B,UAAU,GAAG,KAAKsD,mBAAL,CAAyBjD,aAAzB,CAAjB,CAlCe,CAmCf;;AACA,eAAKkD,qBAAL,CAA2BvD,UAA3B;AACD,S,CAED;;;;4CACoBwD,U,EAAU;AAC5B,mBAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,mBAAO,WAAWC,KAAX,CAAiBzD,MAAM,CAACwD,GAAD,CAAN,CAAYhG,MAA7B,IAAuCgG,GAA9C;AACH;;AACD,iBAAOF,UAAU,CAACI,OAAX,CAAmB,SAAnB,EAA8B,UAASJ,UAAT,EAAqB;AACtDA,sBAAU,GAAGC,OAAO,CAACD,UAAU,CAACK,UAAX,GAAwBhH,QAAxB,CAAiC,CAAjC,CAAD,CAApB;AACA,mBAAO2G,UAAP;AACH,WAHM,CAAP;AAID;;;8CAEqBlE,S,EAAS;AAC7B;AACA,cAAIjB,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAArB;AACA,cAAIuF,SAAS,GAAGxF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB,CAH6B,CAI7B;;AACA,cAAIC,oBAAoB,GAAqBF,QAAQ,CAACG,cAAT,CAAwB,eAAxB,CAA7C;AACA,cAAIC,WAAW,GAAGF,oBAAoB,CAACG,YAAvC;AACA,cAAIC,YAAY,GAAGJ,oBAAoB,CAACK,aAAxC,CAP6B,CAQ7B;;AACAR,wBAAc,CAACS,MAAf,GAAwBF,YAAxB;AACAP,wBAAc,CAACU,KAAf,GAAuBL,WAAvB;AACAoF,mBAAS,CAAChF,MAAV,GAAmBF,YAAnB;AACAkF,mBAAS,CAAC/E,KAAV,GAAkBL,WAAlB,CAZ6B,CAa7B;;AACA,cAAIM,eAAe,GAAGX,cAAc,CAACY,UAAf,CAA0B,IAA1B,CAAtB;AACA,cAAI8E,gBAAgB,GAAGD,SAAS,CAAC7E,UAAV,CAAqB,IAArB,CAAvB,CAf6B,CAgB7B;;AACAD,yBAAe,CAACE,SAAhB,CAA0BV,oBAA1B,EAAgD,CAAhD,EAAmD,CAAnD,EAjB6B,CAkB7B;;AACA,cAAIW,aAAa,GAAGH,eAAe,CAACI,YAAhB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmCV,WAAnC,EAAgDE,YAAhD,CAApB;AACA,cAAIS,SAAS,GAAGF,aAAa,CAAC5C,IAA9B,CApB6B,CAqB7B;;AACA+C,mBAAS,GAAG,qBAAqBA,SAAjC,CAtB6B,CAuB7B;;AACA,cAAI0E,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAU5E,SAAS,CAAC5B,MAAV,GAAiB,CAA3B,IAA8B,CAA9B,GAAgC,EAAnD,CAxB6B,CAyB7B;;AACA,cAAIyG,OAAO,GAAG,CAAd;;AACA,eAAK,IAAI3E,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGuE,YAApB,EAAkCxE,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/C,iBAAK,IAAIE,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAG,CAAtC,EAAyCA,UAAU,EAAnD,EAAwD;AACtD,kBAAIyE,OAAO,GAAG7E,SAAS,CAAC5B,MAAxB,EAAgC;AAC9B,oBAAI2B,SAAS,CAACG,CAAC,GAAGE,UAAL,CAAT,GAA2B,CAA3B,IAAgC,CAApC,EAAsC;AACpCL,2BAAS,CAACG,CAAC,GAAGE,UAAL,CAAT;AACD;;AACDL,yBAAS,CAACG,CAAC,GAAGE,UAAL,CAAT,IAA6BU,QAAQ,CAACd,SAAS,CAAC6E,OAAD,CAAV,CAArC;AACAA,uBAAO;AACR,eAND,MAOK;AACH;AACA,oBAAI9E,SAAS,CAACG,CAAC,GAAGE,UAAL,CAAT,GAA2B,CAA3B,IAAgC,CAApC,EAAsC;AACpCL,2BAAS,CAACG,CAAC,GAAGE,UAAL,CAAT;AACD;AACF;AACF;AACF,WA3C4B,CA4C7B;;;AACAqE,0BAAgB,CAACK,YAAjB,CAA8BjF,aAA9B,EAA6C,CAA7C,EAAgD,CAAhD;AACA4E,0BAAgB,CAAC7E,SAAjB,CAA2B4E,SAA3B,EAAsC,CAAtC,EAAyC,CAAzC,EAA4CpF,WAA5C,EAAyDE,YAAzD;AACA,cAAIyF,QAAQ,GAAG,IAAI7C,KAAJ,EAAf;AACA6C,kBAAQ,CAAC1C,GAAT,GAAemC,SAAS,CAACQ,SAAV,CAAoB,WAApB,CAAf;AACA,eAAKjC,SAAL,GAAiB,IAAjB,CAjD6B,CAkD7B;;AACA,cAAIkC,qBAAqB,GAAqBjG,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAA9C;AACA8F,+BAAqB,CAAC5C,GAAtB,GAA4B0C,QAAQ,CAAC1C,GAArC;AACD,S,CAGD;;;;wCACa;AACX,cAAIjB,OAAO,GAAgBpC,QAAQ,CAACG,cAAT,CAAwB,YAAxB,CAA3B;AACAiC,iBAAO,CAACC,gBAAR,CAAyB,QAAzB,EAAmC,KAAKC,WAAxC;AACAF,iBAAO,CAACG,KAAR;AACD,S,CAED;;;;oCACYC,K,EAAU;AACpB,cAAIC,IAAI,GAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ,CADoB,CAEpB;;AACA,cAAGF,IAAI,CAACG,IAAL,CAAUC,OAAV,CAAkB,OAAlB,MAA+B,CAAC,CAAnC,EAAqC;AACnC;AACA7C,oBAAQ,CAACG,cAAT,CAAwB,WAAxB,EAAqC2C,SAArC,GAAiDL,IAAI,CAAC5D,IAAtD,CAFmC,CAGnC;;AACA,gBAAIkE,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,gBAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAH,kBAAM,CAACI,aAAP,CAAqBV,IAArB;;AACAM,kBAAM,CAACK,SAAP,GAAmB,YAAY;AAC7BH,mBAAK,CAACI,GAAN,GAAYC,GAAG,CAACC,eAAJ,CAAoBd,IAApB,CAAZ;;AACAQ,mBAAK,CAACO,MAAN,GAAe;AACb,oBAAIC,YAAY,GAAqBzD,QAAQ,CAACG,cAAT,CAAwB,eAAxB,CAArC;AACAsD,4BAAY,CAACJ,GAAb,GAAmBJ,KAAK,CAACI,GAAzB;AACD,eAHD;AAID,aAND;AAOD,WAdD,MAcO;AACLK,iBAAK,CAAC,oCAAD,CAAL;AACD;AACF;;;;;;;uBAjNUG,iB,EAAiB,sJ,EAAA,2I,EAAA,yI,EAAA,iI,EAAA,6I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,20C;AAAA;AAAA;ACX9B;;AACC;;AACC;;AAAI;;AAAW;;AAChB;;AACA;;AACC;;AACC;;AAAG;;AAEoD;;AACxD;;AAEA;;AACC;;AACC;;AACA;;AAA+E;AAAA,mBAAS,IAAAF,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAS;;AACnH;;AACA;;AACC;;AAAsB;;AAAsB;;AAC7C;;AACA;;AACC;;AACD;;AACA;;AACC;;AAAG;;AAA+B;;AAClC;;AACD;;AACD;;AAEA;;AACC;;AACC;;AAAoF;AAAA;AAAA;;AAAiD;;AACtI;;AACA;;AACC;;AAAwF;AAAA;AAAA;;AAAxF;;AACD;;AACA;;AACC;;AAA+E;AAAA,mBAAS,IAAAuC,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAM;;AACjH;;AACA;;AACC;;AACA;;AACD;;AACD;;AACD;;AACD;;;;AAtB2B;;AAAA;;AAQ6D;;AAAA;;AAGI;;AAAA;;AAMhF;;AAAA;;AACA;;AAAA;;;;;;;;;sED7BCrC,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTxI,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4K,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,4L;AAAA;AAAA;ACN1B;;AACE;;AACE;;AAAI;;AAAc;;AACpB;;AACA;;AACE;;AACE;;AAAI;;AAAK;;AACT;;AAAG;;AAGgF;;AACrF;;AACA;;AACE;;AAAI;;AAAY;;AAChB;;AAAG;;AAOoE;;AACzE;;AACF;;AACF;;;;;;;;sEDlBaA,a,EAAa;cALzB,uDAKyB;eALf;AACT9K,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa6K,c;AAIX,8BACUpK,eADV,EAEUuD,aAFV,EAGUtD,UAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd,aAAAF,eAAA,GAAAA,eAAA;AACA,aAAAuD,aAAA,GAAAA,aAAA;AACA,aAAAtD,UAAA,GAAAA,UAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACL;;;;mCAEG,CACP;;;kCAES;AAAA;;AACR,cAAMM,IAAI,GAAG;AACXsC,oBAAQ,EAAE,KAAKA,QADJ;AAEXC,oBAAQ,EAAE,KAAKA;AAFJ,WAAb,CADQ,CAMR;;AACA,cAAG,CAAC,KAAK/C,eAAL,CAAqBqK,aAArB,CAAmC7J,IAAnC,CAAJ,EAA6C;AAC3C,iBAAK+C,aAAL,CAAmBI,IAAnB,CAAwB,2BAAxB,EAAqD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAArD;AACA,mBAAO,KAAP;AACD,WAVO,CAYR;;;AACA,cAAG,CAAC,KAAK7D,eAAL,CAAqBsK,yBAArB,CAA+C9J,IAA/C,CAAJ,EAAyD;AACvD,iBAAK+C,aAAL,CAAmBI,IAAnB,CAAwB,mDAAxB,EAA6E;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAA7E;AACA,mBAAO,KAAP;AACD,WAhBO,CAkBR;;;AACA,cAAG,CAAC,KAAK7D,eAAL,CAAqB8D,mBAArB,CAAyC,KAAKf,QAA9C,CAAJ,EAA4D;AAC1D,iBAAKQ,aAAL,CAAmBI,IAAnB,CAAwB,uCAAxB,EAAiE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAjE;AACA,mBAAO,KAAP;AACD,WAtBO,CAwBR;;;AACA,eAAK5D,UAAL,CAAgBsK,gBAAhB,CAAiC/J,IAAjC,EAAuC6H,SAAvC,CAAiD,UAAApG,IAAI,EAAI;AACvD,gBAAGA,IAAI,CAAC0G,OAAR,EAAgB;AACd,oBAAI,CAAC1I,UAAL,CAAgBuK,aAAhB,CAA8BvI,IAAI,CAACjB,KAAnC,EAA0CiB,IAAI,CAACzB,IAA/C;;AACA,oBAAI,CAACN,MAAL,CAAYE,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,aAHD,MAGO;AACL,oBAAI,CAACmD,aAAL,CAAmBI,IAAnB,CAAwB1B,IAAI,CAAC2G,GAA7B,EAAkC;AAAChF,wBAAQ,EAAE,cAAX;AAA2BC,uBAAO,EAAC;AAAnC,eAAlC;;AACA,oBAAI,CAAC3D,MAAL,CAAYE,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AACF,WARD;AASD;;;;;;;uBAhDUgK,c,EAAc,2I,EAAA,6I,EAAA,iI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,8hB;AAAA;AAAA;ACV3B;;AACE;;AACE;;AAAI;;AAAK;;AACX;;AACA;;AACE;;AAAM;AAAA,mBAAU,IAAAK,OAAA,EAAV;AAAmB,WAAnB;;AACJ;;AACE;;AACE;;AAAG;;AAAS;;AACZ;;AAA8E;AAAA;AAAA;;AAA9E;;AACF;;AACA;;AACE;;AAAG;;AAAS;;AACZ;;AAAkF;AAAA;AAAA;;AAAlF;;AACF;;AACF;;AACA;;AACE;;AAAiF;;AAAK;;AACxF;;AACF;;AACF;;AACF;;;;AAZwF;;AAAA;;AAII;;AAAA;;;;;;;;;sEDH/EL,c,EAAc;cAL1B,uDAK0B;eALhB;AACT/K,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACcQ;;AACE;;AACE;;AACE;;AAAG;;AAAuC;;AAC1C;;AACE;;AAAyF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAM;;AAC/H;;AACF;;AACF;;AACF;;;;;;AANS;;AAAA;;;;;;AALb;;AACE;;AACE;;AAUF;;AACF;;;;;;AAXQ;;AAAA;;;;;;AAZV;;AACE;;AACE;;AAAI;;AAAgB;;AACtB;;AACA;;AACE;;AACE;;AAAI;;AAAsB;;AAC1B;;AAAG;;AAA0I;;AAC/I;;AACF;;AACA;;AAcF;;;;;;AAlBU;;AAAA;;AAIH;;AAAA;;;;QDFImL,wB;AAIX,wCACUzK,UADV,EAEUsD,aAFV,EAGUrD,MAHV,EAGwB;AAAA;;AAFd,aAAAD,UAAA,GAAAA,UAAA;AACA,aAAAsD,aAAA,GAAAA,aAAA;AACA,aAAArD,MAAA,GAAAA,MAAA;AACL;;;;mCAEG;AAAA;;AACN,eAAKD,UAAL,CAAgBmI,eAAhB,GAAkCC,SAAlC,CAA6C,UAAAC,GAAG,EAAI;AAClD,gBAAIrG,IAAI,GAAG,EAAX;AACAA,gBAAI,GAAGqG,GAAP;AACA,kBAAI,CAAC9H,IAAL,GAAYyB,IAAI,CAACzB,IAAjB;AACA,kBAAI,CAACI,OAAL,GAAe,MAAI,CAACJ,IAAL,CAAU+H,IAAzB;AACD,WALD,EAMA,UAAApC,GAAG,EAAI;AACL+B,mBAAO,CAACC,GAAR,CAAYhC,GAAZ;AACA,mBAAO,KAAP;AACD,WATD;AAUD,S,CAED;;;;sCACcwE,W,EAAW;AAAA;;AACvB;AACA,cAAIC,KAAK,GAAG,KAAKhK,OAAL,CAAaiG,OAAb,CAAqB8D,WAArB,CAAZ;AACA,cAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB,KAAKhK,OAAL,CAAa6E,MAAb,CAAoBmF,KAApB,EAA2B,CAA3B;AAClB,cAAInC,OAAO,GAAG;AACZF,gBAAI,EAAE,KAAK3H;AADC,WAAd;AAGA,eAAKX,UAAL,CAAgByI,cAAhB,CAA+BD,OAA/B,EAAwCJ,SAAxC,CAAmD,UAAAC,GAAG,EAAI;AACxD,gBAAGA,GAAG,CAACK,OAAP,EAAe;AACb,oBAAI,CAACpF,aAAL,CAAmBI,IAAnB,CAAwB2E,GAAG,CAACM,GAA5B,EAAiC;AAAChF,wBAAQ,EAAE,eAAX;AAA4BC,uBAAO,EAAC;AAApC,eAAjC;AACD,aAFD,MAEM;AACJ,oBAAI,CAACN,aAAL,CAAmBI,IAAnB,CAAwB2E,GAAG,CAACM,GAA5B,EAAiC;AAAChF,wBAAQ,EAAE,cAAX;AAA2BC,uBAAO,EAAC;AAAnC,eAAjC;AACD;AACF,WAND,EAOA,UAAAsC,GAAG,EAAI;AACL+B,mBAAO,CAACC,GAAR,CAAYhC,GAAZ;AACA,mBAAO,KAAP;AACD,WAVD;AAWD;;;;;;;uBA1CUuE,wB,EAAwB,iI,EAAA,6I,EAAA,uH;AAAA,K;;;YAAxBA,wB;AAAwB,0C;AAAA,c;AAAA,a;AAAA,0b;AAAA;AAAA;ACTrC;;AACE;;AAyBF;;;;AAzBO;;AAAA;;;;;;;;;sEDQMA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTrL,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWasL,iB;AAMX,iCACU7K,eADV,EAEUuD,aAFV,EAGUtD,UAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd,aAAAF,eAAA,GAAAA,eAAA;AACA,aAAAuD,aAAA,GAAAA,aAAA;AACA,aAAAtD,UAAA,GAAAA,UAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACL;;;;mCAEG,CACP;;;qCAEY;AAAA;;AACX,cAAMM,IAAI,GAAG;AACXqC,gBAAI,EAAE,KAAKA,IADA;AAEXC,oBAAQ,EAAE,KAAKA,QAFJ;AAGXC,oBAAQ,EAAE,KAAKA,QAHJ;AAIXwF,gBAAI,EAAE;AAJK,WAAb,CADW,CAQX;;AACA,cAAG,CAAC,KAAKvI,eAAL,CAAqB8K,gBAArB,CAAsCtK,IAAtC,CAAJ,EAAgD;AAC9C,iBAAK+C,aAAL,CAAmBI,IAAnB,CAAwB,2BAAxB,EAAqD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAArD;AACA,mBAAO,KAAP;AACD,WAZU,CAcX;;;AACA,cAAG,CAAC,KAAK7D,eAAL,CAAqB+K,4BAArB,CAAkDvK,IAAlD,CAAJ,EAA4D;AAC1D,iBAAK+C,aAAL,CAAmBI,IAAnB,CAAwB,mDAAxB,EAA6E;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAA7E;AACA,mBAAO,KAAP;AACD,WAlBU,CAoBX;;;AACA,cAAG,CAAC,KAAK7D,eAAL,CAAqB8D,mBAArB,CAAyC,KAAKf,QAA9C,CAAJ,EAA4D;AAC1D,iBAAKQ,aAAL,CAAmBI,IAAnB,CAAwB,uCAAxB,EAAiE;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAC;AAAnC,aAAjE;AACA,mBAAO,KAAP;AACD,WAxBU,CA0BX;;;AACA,eAAK5D,UAAL,CAAgB+K,YAAhB,CAA6BxK,IAA7B,EAAmC6H,SAAnC,CAA6C,UAAApG,IAAI,EAAI;AACnD,gBAAGA,IAAI,CAAC0G,OAAR,EAAgB;AACd,oBAAI,CAACpF,aAAL,CAAmBI,IAAnB,CAAwB,qBAAxB,EAA+C;AAACC,wBAAQ,EAAE,eAAX;AAA4BC,uBAAO,EAAC;AAApC,eAA/C;;AACA,oBAAI,CAAC3D,MAAL,CAAYE,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,aAHD,MAGO;AACL,oBAAI,CAACmD,aAAL,CAAmBI,IAAnB,CAAwB1B,IAAI,CAAC2G,GAA7B,EAAkC;AAAChF,wBAAQ,EAAE,cAAX;AAA2BC,uBAAO,EAAC;AAAnC,eAAlC;;AACA,oBAAI,CAAC3D,MAAL,CAAYE,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF,WARD;AASD;;;;;;;uBApDUyK,iB,EAAiB,2I,EAAA,6I,EAAA,iI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,8pB;AAAA;AAAA;ACV9B;;AACE;;AACE;;AAAI;;AAAQ;;AACd;;AACA;;AACE;;AAAM;AAAA,mBAAU,IAAAI,UAAA,EAAV;AAAsB,WAAtB;;AACJ;;AACE;;AACE;;AAAG;;AAAgB;;AACnB;;AAA0E;AAAA;AAAA;;AAA1E;;AACF;;AACA;;AACE;;AAAG;;AAAgB;;AACnB;;AAA8E;AAAA;AAAA;;AAA9E;;AACF;;AACA;;AACE;;AAAG;;AAAgB;;AACnB;;AAAkF;AAAA;AAAA;;AAAlF;;AACF;;AACF;;AACA;;AACE;;AAAiF;;AAAQ;;AAC3F;;AACF;;AACF;;AACF;;;;AAhBoF;;AAAA;;AAII;;AAAA;;AAII;;AAAA;;;;;;;;;sEDP/EJ,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTxL,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa2L,kB;AAYX,kCACUjL,UADV,EAEU6H,cAFV,EAGU5H,MAHV,EAGwB;AAAA;;AAFd,aAAAD,UAAA,GAAAA,UAAA;AACA,aAAA6H,cAAA,GAAAA,cAAA;AACA,aAAA5H,MAAA,GAAAA,MAAA;AAdV,aAAA+B,IAAA,GAAW;AAACkJ,cAAI,EAAE;AAAP,SAAX;AAeK;;;;mCAEG;AACN;AACA,eAAKC,gBAAL;AACD,S,CAED;;;;mCACW/D,G,EAAG;AACZ,eAAKS,cAAL,CAAoBuD,WAApB,CAAgChE,GAAhC;AACA,eAAKnH,MAAL,CAAYE,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;2CAEe;AAAA;;AACd,eAAKH,UAAL,CAAgBqL,QAAhB,CAAyB,gCAAzB,EAA2DjD,SAA3D,CAAqE,UAAAC,GAAG,EAAI;AAC1E,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAACkF,MAAL,GAAcxE,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,+BAAzB,EAA0DjD,SAA1D,CAAoE,UAAAC,GAAG,EAAI;AACzE,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAACqF,MAAL,GAAc3E,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,gCAAzB,EAA2DjD,SAA3D,CAAqE,UAAAC,GAAG,EAAI;AAC1E,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAACsF,MAAL,GAAc5E,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,gCAAzB,EAA2DjD,SAA3D,CAAqE,UAAAC,GAAG,EAAI;AAC1E,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAACuF,MAAL,GAAc7E,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,gCAAzB,EAA2DjD,SAA3D,CAAqE,UAAAC,GAAG,EAAI;AAC1E,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAACwF,MAAL,GAAc9E,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,+BAAzB,EAA0DjD,SAA1D,CAAoE,UAAAC,GAAG,EAAI;AACzE,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAACyF,MAAL,GAAc/E,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,+BAAzB,EAA0DjD,SAA1D,CAAoE,UAAAC,GAAG,EAAI;AACzE,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAAC0F,MAAL,GAAchF,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,gCAAzB,EAA2DjD,SAA3D,CAAqE,UAAAC,GAAG,EAAI;AAC1E,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAAC2F,MAAL,GAAcjF,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYA,eAAKxL,UAAL,CAAgBqL,QAAhB,CAAyB,gCAAzB,EAA2DjD,SAA3D,CAAqE,UAAAC,GAAG,EAAI;AAC1E,gBAAIvB,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACV,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,oBAAI,CAAC4F,MAAL,GAAclF,MAAM,CAACyE,MAArB;AACD,aAFD,EAEG,KAFH;;AAGA,gBAAIlD,GAAJ,EAAS;AACPvB,oBAAM,CAACI,aAAP,CAAqBmB,GAArB;AACD;AACF,WARD,EAQG,UAAAmD,KAAK,EAAI;AACVvD,mBAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,WAVD;AAYD;;;;;;;uBA1IUP,kB,EAAkB,iI,EAAA,yI,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,oV;AAAA;AAAA;;;ACT/B;;AACC;;AACG;;AAAI;;AAAe;;AACrB;;AACD;;AACC;;AAAyB;;AAAuC;;AACjE;;AACA;;AACA;;AACC;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAgB,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACA;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACA;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACD;;AAEA;;AACC;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACA;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACA;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACD;;AAEA;;AACC;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACA;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACA;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,UAAA,SAAT;AAA6B,WAA7B;;AAA7C;;AACD;;AACD;;;;AAhBa;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;sEDdAhB,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT7L,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM4M,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAlG,GAAG;AAAA,aAAI+B,OAAO,CAACuD,KAAR,CAActF,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SelectionComponent } from './views/selection/selection.component';\r\nimport { EncodingComponent } from './views/encoding/encoding.component';\r\nimport { DecodingComponent } from './views/decoding/decoding.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { RegisterComponent } from './views/register/register.component';\r\nimport { PasswordmanagerComponent } from './views/passwordmanager/passwordmanager.component';\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { AuthGuard } from \"./services/guard.auth\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'encoding', component: EncodingComponent },\r\n  { path: 'decoding', component: DecodingComponent },\r\n  { path: 'passwordManager', component: PasswordmanagerComponent, canActivate:[AuthGuard]},\r\n  { path: 'selection', component: SelectionComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'steganographyApp';\r\n}\r\n","<header class=\"w3-display-container w3-center\">\r\n  <app-navbar></app-navbar>\r\n</header>\r\n<div class=\"w3-padding-large\">\r\n  <flash-messages></flash-messages>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<app-footer></app-footer>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SelectionComponent } from './views/selection/selection.component';\r\nimport { EncodingComponent } from './views/encoding/encoding.component';\r\nimport { DecodingComponent } from './views/decoding/decoding.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { RegisterComponent } from './views/register/register.component';\r\nimport { PasswordmanagerComponent } from './views/passwordmanager/passwordmanager.component';\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { ApiService } from './services/api.service';\r\nimport { ValidateService } from './services/validate.service';\r\nimport { AuthGuard } from './services/guard.auth';\r\nimport { SharingService } from './services/sharing.service';\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    SelectionComponent,\r\n    EncodingComponent,\r\n    DecodingComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    PasswordmanagerComponent,\r\n    HomeComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    FlashMessagesModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n    JwtHelperService,\r\n    ApiService,\r\n    ValidateService,\r\n    SharingService,\r\n    AuthGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <p>© 2020 by aleks-andrs</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from './../services/validate.service';\r\nimport { ApiService } from './../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    public apiService: ApiService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogoutClick(){\r\n    this.apiService.logoutUser();\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","  <!-- Navigation Bar -->\r\n  <nav class=\"navbar navbar-expand-lg navbar-light bd-navbar\">\r\n    <a class=\"navbar-brand\" href=\"/home\">Steganographer</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto pt-1\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/encoding\">Encoding</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/decoding\">Decoding</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/selection\">Image selection</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a *ngIf=\"apiService.loggedIn()\" class=\"nav-link\" href=\"/passwordManager\">Password manager</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"navbar-nav my-2 my-lg-0 pt-1\">\r\n        <li class=\"nav-item\">\r\n          <a *ngIf=\"!apiService.loggedIn()\" class=\"nav-link\" href=\"/login\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a *ngIf=\"!apiService.loggedIn()\" class=\"nav-link\" href=\"/register\">Register</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a *ngIf=\"apiService.loggedIn()\" (click)=\"onLogoutClick()\" class=\"nav-link\" href=\"/register\">Logout</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n</nav>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from \"rxjs\";\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(\r\n    private http:HttpClient,\r\n    private helperService: JwtHelperService\r\n  ) { }\r\n\r\n  //register new user\r\n  registerUser(user): Observable<any> {\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post<any>('users/register', user, httpOptions);\r\n  }\r\n\r\n  //authorise user\r\n  authenticateUser(user): Observable<any> {\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post<any>('users/authenticate', user, httpOptions);\r\n  }\r\n\r\n  //update saved encryption keys\r\n  updateUserInfo(keyList): Observable<any> {\r\n    this.loadToken();\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.authToken\r\n      })\r\n    };\r\n    return this.http.put<any>('users/update', keyList, httpOptions);\r\n  }\r\n\r\n  storeUserData(token, user){\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  logoutUser(){\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  getSavedDetails(): Observable<any> {\r\n    this.loadToken();\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.authToken\r\n      })\r\n    };\r\n    return this.http.get<any>('users/details', httpOptions);\r\n  }\r\n\r\n  //get currently logged in user\r\n  loadToken(){\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  loggedIn(){\r\n    let helperService = new JwtHelperService();\r\n    if(localStorage.id_token == undefined){\r\n      return false;\r\n    }\r\n    return !helperService.isTokenExpired(localStorage.id_token);\r\n  }\r\n\r\n  getImage(imageUrl: string): Observable<Blob> {\r\n    return this.http.get(imageUrl, { responseType: 'blob' });\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router\r\n  ){  }\r\n\r\n  canActivate(){\r\n    if(this.apiService.loggedIn()){\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SharingService{\r\n    private data:any = undefined;\r\n\r\n    //pass image data to sharing services\r\n    setImageSrc(data:any){\r\n        this.data = data;\r\n    }\r\n\r\n    //retrieve data\r\n    getImageSrc():any{\r\n        return this.data;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StrEncryptionService {\r\n  secretKey = \"Something\";\r\n\r\n  constructor() { }\r\n\r\n  encrypt(value : string) : string{\r\n    return CryptoJS.AES.encrypt(value, this.secretKey.trim()).toString();\r\n  }\r\n\r\n  decrypt(textToDecrypt : string){\r\n    return CryptoJS.AES.decrypt(textToDecrypt, this.secretKey.trim()).toString(CryptoJS.enc.Utf8);\r\n  }\r\n\r\n  setPassword(passStr : string){\r\n    this.secretKey = passStr;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  //validate a user object for register component\r\n  validateRegister(user){\r\n    if(user.name == undefined || user.username == undefined || user.password == undefined || user.name == \"\" || user.username == \"\" || user.password == \"\"){\r\n      return false;\r\n    } else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  //validate a user object for login component\r\n  validateLogin(user){\r\n    if(user.username == undefined || user.password == undefined || user.username == \"\" || user.password == \"\"){\r\n      return false;\r\n    } else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  //validate register input is alphanumeric\r\n  validateAlphaNumericRegister(user){\r\n    var acceptableInput = /^[0-9a-zA-Z]+$/;\r\n    var extendedAcceptableInput = /^[0-9a-zA-Z]+( [0-9a-zA-Z]+)*$/;\r\n    if(user.name.match(extendedAcceptableInput) && user.username.match(acceptableInput) && user.password.match(acceptableInput)){\r\n      return true;\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //validate login input is alphanumeric\r\n  validateAlphaNumericLogin(user){\r\n    var acceptableInput = /^[0-9a-zA-Z]+$/;\r\n    if(user.username.match(acceptableInput) && user.password.match(acceptableInput)){\r\n      return true;\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //validate any field for present text\r\n  validateEntry(givenString){\r\n    if(givenString == undefined || givenString.length < 1){\r\n      return false;\r\n    } else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  //validate any field for length(min 4, max 12)\r\n  validateEntryLength(givenString){\r\n    if(givenString.length < 4 || givenString.length > 12){\r\n      return false;\r\n    } else{\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StrEncryptionService } from \"./../../services/str.encryption.service\";\r\nimport { ValidateService } from './../../services/validate.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { ApiService } from './../../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-decoding',\r\n  templateUrl: './decoding.component.html',\r\n  styleUrls: ['./decoding.component.css']\r\n})\r\nexport class DecodingComponent implements OnInit {\r\n  decryptedText: string;\r\n  decryptionKey: string;\r\n  isDisabled: boolean;\r\n\r\n  constructor(\r\n    private strEncryptionService: StrEncryptionService,\r\n    private validateService: ValidateService,\r\n    public apiService: ApiService,\r\n    private flashMessages: FlashMessagesService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isDisabled = false;\r\n  }\r\n\r\n\r\n  //select decryption key from password manager\r\n  onClickSelectKey(){\r\n    this.router.navigate(['/passwordManager']);\r\n  }\r\n\r\n\r\n  //decrypt button\r\n  onClickDecrypt() {\r\n    //get user input\r\n    decryptionKey: this.decryptionKey;\r\n    //validate decryption key\r\n    if(!this.validateService.validateEntry(this.decryptionKey)){\r\n      this.flashMessages.show('Decryption key is missing', {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n    if(!this.validateService.validateEntryLength(this.decryptionKey)){\r\n      this.flashMessages.show('Decryption key must be 4 to 12 symbols long', {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n\r\n    //generate canvas object\r\n    var originalCanvas = document.createElement(\"canvas\");\r\n    let selectedImageElement: HTMLImageElement = document.getElementById('selectedImage') as HTMLImageElement;\r\n    var canvasWidth = selectedImageElement.naturalWidth;\r\n    var canvasHeight = selectedImageElement.naturalHeight;\r\n    //set canvas dimensions\r\n    originalCanvas.height = canvasHeight;\r\n    originalCanvas.width = canvasWidth;\r\n    //create context\r\n    var originalContext = originalCanvas.getContext(\"2d\");\r\n    //set context\r\n    originalContext.drawImage(selectedImageElement, 0, 0);\r\n    //get pixel data from the image\r\n    var origImageData = originalContext.getImageData(0, 0, canvasWidth, canvasHeight);\r\n    var pixelData = origImageData.data;\r\n    var binaryTxt = \"\";\r\n    var stopFlagCount = 0;\r\n    //read binary from the picture\r\n    for (var i = 0, n = pixelData.length; i < n; i += 4) {\r\n      for (var pixelValue =0; pixelValue < 3; pixelValue ++) {\r\n        var bit = 0;\r\n        if(pixelData[i + pixelValue] %2 != 0) {\r\n          bit = 1;\r\n          //reset end flag counter\r\n          stopFlagCount = 0;\r\n        }\r\n        stopFlagCount += 1;\r\n        binaryTxt += bit;\r\n        //stop reading binary when end flag reached\r\n        if(stopFlagCount>12){\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //insert a space after every 8 bits\r\n    binaryTxt = binaryTxt.match(/.{1,8}/g).join(\" \");\r\n    //convert to arrray\r\n    var newBinary = binaryTxt.split(\" \");\r\n    //check for start flag(first 2 empty bits)\r\n    if(newBinary[0]==\"10000001\" && newBinary[1]==\"00000001\"){\r\n      //remove the flag from the list\r\n       newBinary.splice(0,2);\r\n    } else{\r\n      this.flashMessages.show(\"Provided image does not contain a message\", {cssClass: 'alert-danger', timeout:3000});\r\n      return;\r\n    }\r\n    var binaryCode = [];\r\n    //read data until the first empty byte\r\n    for (i = 0; i < newBinary.length; i++) {\r\n      if(newBinary[i] != \"00000000\"){\r\n        binaryCode.push(String.fromCharCode(parseInt(newBinary[i], 2)));\r\n      } else{\r\n        break;\r\n      }\r\n    }\r\n    //get encrypted text\r\n    var encryptedText = binaryCode.join(\"\");\r\n    //set decryption key\r\n    this.strEncryptionService.setPassword(this.decryptionKey);\r\n    //decrypt text\r\n    try {\r\n      let decryptedTextMessage = this.strEncryptionService.decrypt(encryptedText);\r\n      if(decryptedTextMessage == \"\" || decryptedTextMessage == undefined){\r\n        throw \"error\";\r\n      }\r\n      //display decrypted text\r\n      this.isDisabled = true;\r\n      this.decryptedText = decryptedTextMessage;\r\n    } catch(err){\r\n      this.isDisabled = false;\r\n      this.flashMessages.show(\"Wrong Decryption key used. Please try again\", {cssClass: 'alert-danger', timeout:3000});\r\n    }\r\n  }\r\n\r\n\r\n  //simulate button press on 'fileUpload' button\r\n  onClickBrowse(){\r\n    let element: HTMLElement = document.getElementById('fileUpload') as HTMLElement;\r\n    element.addEventListener(\"change\", this.uploadImage);\r\n    element.click();\r\n  }\r\n\r\n  //select and upload image\r\n  uploadImage(event: any){\r\n    var file =  event.target.files[0];\r\n    //check the uploaded file type\r\n    if(file.type.indexOf(\"image\") !== -1){\r\n      //set image name\r\n      document.getElementById('lblUpload').innerHTML = file.name;\r\n      //read image\r\n      var reader = new FileReader();\r\n      var image = new Image;\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = function () {\r\n        image.src = URL.createObjectURL(file);\r\n        image.onload = function() {\r\n          let imageElement: HTMLImageElement = document.getElementById('selectedImage') as HTMLImageElement;\r\n          imageElement.src = image.src\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"Selected file is not an image type\");\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- Decrypt frame -->\r\n<div class=\"w3-display-container\">\r\n\t<div class=\"w3-padding-16 w3-center\">\r\n\t\t<h2>Decode text</h2>\r\n\t</div>\r\n\t<div class=\"w3-row-padding\">\r\n\t\t<div class=\"w3-panel w3-padding w3-border w3-round-xlarge\">\r\n\t\t\t<p>To decode hidden text from an image, please select the right image and provide a corresponding decryption key. Keys may be stored in the Password Manager.</p>\r\n\t\t</div>\r\n\t\t<!-- Left side -->\r\n\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t<div class=\"w3-padding w3-half\">\r\n\t\t\t\t<input type=\"file\" id=\"fileUpload\" name=\"file\" style=\"display: none\" accept=\"image/*\">\r\n\t\t\t\t<button class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" (click)=\"onClickBrowse()\">Browse...</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-padding-16 w3-half\">\r\n\t\t\t\t<label id=\"lblUpload\">upload image</label>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-padding\">\r\n\t\t\t\t<img class=\"w3-image\" src=\"assets/images/placeholder.jpg\" alt=\"Placeholder\" id=\"selectedImage\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- Right side -->\r\n\t\t<div class=\"w3-rest w3-padding\">\r\n\t\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t\t<input class=\"w3-input w3-border w3-round\" type=\"password\" placeholder=\"Decryption key\" [(ngModel)]=\"decryptionKey\" name=\"decryptionKey\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t\t<button class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" (click)=\"onClickDecrypt()\">Decode</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t\t<button *ngIf=\"apiService.loggedIn()\" class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" (click)=\"onClickSelectKey()\">Select Key</button>\r\n\t\t\t\t<button *ngIf=\"!apiService.loggedIn()\" class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" [disabled]=\"true\">Select Key</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-padding\">\r\n\t\t\t\t<textarea class=\"w3-input w3-border w3-round\" [disabled]=\"!isDisabled\" placeholder=\"Decoded text\" rows=\"8\" [(ngModel)]=\"decryptedText\" name=\"decryptedText\"></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StrEncryptionService } from \"./../../services/str.encryption.service\";\r\nimport { ValidateService } from './../../services/validate.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { ApiService } from './../../services/api.service';\r\nimport { SharingService } from './../../services/sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-encoding',\r\n  templateUrl: './encoding.component.html',\r\n  styleUrls: ['./encoding.component.css']\r\n})\r\nexport class EncodingComponent implements OnInit {\r\n  imageSrc:any;\r\n  textToEncrypt: string;\r\n  encryptionPassword: string;\r\n  isVisible: boolean;\r\n  user: any;\r\n  keyList: [any];\r\n\r\n  constructor(\r\n    private strEncryptionService: StrEncryptionService,\r\n    private validateService: ValidateService,\r\n    private sharingService: SharingService,\r\n    public apiService: ApiService,\r\n    private flashMessages: FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isVisible = false;\r\n    this.imageSrc = this.sharingService.getImageSrc();\r\n    try{\r\n      if(this.imageSrc){\r\n        let imageElement: HTMLImageElement = document.getElementById('selectedImage') as HTMLImageElement;\r\n        imageElement.src = this.imageSrc;\r\n      }\r\n    } catch(err){\r\n      console.log(err);\r\n    }\r\n\r\n\r\n\r\n    if(this.apiService.loggedIn()){\r\n      //get the list of all keys associated with user\r\n      this.apiService.getSavedDetails().subscribe( res => {\r\n        let data = {} as any;\r\n        data = res;\r\n        this.user = data.user;\r\n        this.keyList = this.user.info;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      });\r\n    }\r\n  }\r\n\r\n  onClickSaveKey(){\r\n    encryptionPassword: this.encryptionPassword;\r\n    //Validate encryption key field\r\n    if(!this.validateService.validateEntry(this.encryptionPassword)){\r\n      this.flashMessages.show('Encryption key is missing', {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n    if(!this.validateService.validateEntryLength(this.encryptionPassword)){\r\n      this.flashMessages.show('Encryption key must be 4 to 12 symbols long', {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n    //insert key in the list\r\n    this.keyList.push(this.encryptionPassword);\r\n    //save in the appropriate format\r\n    var newData = {\r\n      info: this.keyList\r\n    }\r\n    this.apiService.updateUserInfo(newData).subscribe( res => {\r\n      if(res.success){\r\n        this.flashMessages.show(res.msg, {cssClass: 'alert-success', timeout:3000});\r\n      } else{\r\n        this.flashMessages.show(res.msg, {cssClass: 'alert-danger', timeout:3000});\r\n      }\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n  }\r\n\r\n  onClickEncrypt() {\r\n    //get user input\r\n    textToEncrypt: this.textToEncrypt;\r\n    encryptionPassword: this.encryptionPassword;\r\n    //Validate text field\r\n    if(!this.validateService.validateEntry(this.textToEncrypt)){\r\n      this.flashMessages.show('No text provided for encryption', {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n    //Validate encryption key field\r\n    if(!this.validateService.validateEntry(this.encryptionPassword)){\r\n      this.flashMessages.show('Encryption key missing', {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n    if(!this.validateService.validateEntryLength(this.encryptionPassword)){\r\n      this.flashMessages.show('Encryption key must be 4 to 12 symbols long', {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n    //set password\r\n    this.strEncryptionService.setPassword(this.encryptionPassword);\r\n    //encrypt text\r\n    let encryptedText = this.strEncryptionService.encrypt(this.textToEncrypt);\r\n\r\n    //get chosen image\r\n    let imageElement: HTMLImageElement = document.getElementById('selectedImage') as HTMLImageElement;\r\n    var imgWidth = imageElement.naturalWidth;\r\n    var imgHeight = imageElement.naturalHeight;\r\n\r\n    //check if text length is too long to be encoded in the picture\r\n    if (((encryptedText.length+32) * 8) > (imgHeight * imgWidth * 3)) {\r\n      this.flashMessages.show(\"Provided text is too long for this picture\", {cssClass: 'alert-danger', timeout:3000});\r\n      return;\r\n    }\r\n    //convert text to binary\r\n    var binaryCode = this.convertTextToBinary(encryptedText);\r\n    //encode binary code inside the picture\r\n    this.encodeBinaryIntoImage(binaryCode);\r\n  }\r\n\r\n  //text to binary converter\r\n  convertTextToBinary(cryptoText){\r\n    function zeroPad(idx) {\r\n        return \"00000000\".slice(String(idx).length) + idx;\r\n    }\r\n    return cryptoText.replace(/[\\s\\S]/g, function(cryptoText) {\r\n        cryptoText = zeroPad(cryptoText.charCodeAt().toString(2));\r\n        return cryptoText\r\n    });\r\n  }\r\n\r\n  encodeBinaryIntoImage(binaryTxt){\r\n    //create canvas objects\r\n    var originalCanvas = document.createElement(\"canvas\");\r\n    var newCanvas = document.createElement(\"canvas\");\r\n    //get selected image details\r\n    let selectedImageElement: HTMLImageElement = document.getElementById('selectedImage') as HTMLImageElement;\r\n    var canvasWidth = selectedImageElement.naturalWidth;\r\n    var canvasHeight = selectedImageElement.naturalHeight;\r\n    //set canvas dimensions\r\n    originalCanvas.height = canvasHeight;\r\n    originalCanvas.width = canvasWidth;\r\n    newCanvas.height = canvasHeight;\r\n    newCanvas.width = canvasWidth;\r\n    //generate context\r\n    var originalContext = originalCanvas.getContext(\"2d\");\r\n    var newCanvasContext = newCanvas.getContext(\"2d\");\r\n    //set context\r\n    originalContext.drawImage(selectedImageElement, 0, 0);\r\n    //read pixel data\r\n    var origImageData = originalContext.getImageData(0, 0, canvasWidth, canvasHeight);\r\n    var pixelData = origImageData.data;\r\n    //append binary text with 2 empty bytes(start flag)\r\n    binaryTxt = \"1000000100000001\" + binaryTxt;\r\n    //get binary text length and add space for 2 more empty bytes(16 bits) at the end\r\n    var lengthBinary = Math.ceil(binaryTxt.length/3)*4+16;\r\n    //equalize the data and encode binary message\r\n    var counter = 0;\r\n    for (var i = 0, n = lengthBinary; i < n; i += 4) {\r\n      for (var pixelValue = 0; pixelValue < 3; pixelValue ++) {\r\n        if (counter < binaryTxt.length) {\r\n          if (pixelData[i + pixelValue] %2 != 0){\r\n            pixelData[i + pixelValue]--;\r\n          }\r\n          pixelData[i + pixelValue] += parseInt(binaryTxt[counter]);\r\n          counter++;\r\n        }\r\n        else {\r\n          //attach empty bytes at the end of the string\r\n          if (pixelData[i + pixelValue] %2 != 0){\r\n            pixelData[i + pixelValue]--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //upload pixels with encoded string to the canvas and convert to png image\r\n    newCanvasContext.putImageData(origImageData, 0, 0);\r\n    newCanvasContext.drawImage(newCanvas, 0, 0, canvasWidth, canvasHeight);\r\n    var newImage = new Image();\r\n    newImage.src = newCanvas.toDataURL(\"image/png\");\r\n    this.isVisible = true;\r\n    //load new picture\r\n    let generatedImageElement: HTMLImageElement = document.getElementById('resultImage') as HTMLImageElement;\r\n    generatedImageElement.src = newImage.src;\r\n  }\r\n\r\n\r\n  //simulate browse button click\r\n  onClickBrowse(){\r\n    let element: HTMLElement = document.getElementById('fileUpload') as HTMLElement;\r\n    element.addEventListener(\"change\", this.uploadImage);\r\n    element.click();\r\n  }\r\n\r\n  //select and upload image\r\n  uploadImage(event: any){\r\n    var file =  event.target.files[0];\r\n    //check the uploaded file type\r\n    if(file.type.indexOf(\"image\") !== -1){\r\n      //set image name\r\n      document.getElementById('lblUpload').innerHTML = file.name;\r\n      //read image\r\n      var reader = new FileReader();\r\n      var image = new Image;\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = function () {\r\n        image.src = URL.createObjectURL(file);\r\n        image.onload = function() {\r\n          let imageElement: HTMLImageElement = document.getElementById('selectedImage') as HTMLImageElement;\r\n          imageElement.src = image.src\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"Selected file is not an image type\");\r\n    }\r\n  }\r\n}\r\n","<!-- Encrypt frame -->\r\n<div class=\"w3-display-container\">\r\n\t<div class=\"w3-padding-16 w3-center\">\r\n\t\t<h2>Encode text</h2>\r\n\t</div>\r\n\t<div class=\"w3-row-padding\">\r\n\t\t<div class=\"w3-panel w3-padding  w3-border w3-round-xlarge\">\r\n\t\t\t<p>To encode a text into an image, please enter the text, select the image and provide an encryption key.\r\n\t\t\t\tThe encryption key can be saved in the Password Manager for later use. NOTE: Avoid using large files as\r\n\t\t\t\timage encoding can be a computationally heavy process!</p>\r\n\t\t</div>\r\n\t\t<!-- Left side -->\r\n\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t<div class=\"w3-padding w3-half\">\r\n\t\t\t\t<input type=\"file\" id=\"fileUpload\" name=\"file\" style=\"display: none\" accept=\"image/*\">\r\n\t\t\t\t<button class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" (click)=\"onClickBrowse()\">Browse...</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-padding-16 w3-half\">\r\n\t\t\t\t<label id=\"lblUpload\">upload or select image</label>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-padding\">\r\n\t\t\t\t<img class=\"w3-image\" src=\"assets/images/placeholder.jpg\" alt=\"Placeholder\" id=\"selectedImage\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-padding\" [hidden]=\"!isVisible\">\r\n\t\t\t\t<p>Right-click to Save this image:</p>\r\n\t\t\t\t<img class=\"w3-image\" src=\"assets/images/placeholder.jpg\" alt=\"Placeholder\" id=\"resultImage\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- Right side -->\r\n\t\t<div class=\"w3-rest w3-padding\">\r\n\t\t\t<div class=\"w3-padding\">\r\n\t\t\t\t<textarea class=\"w3-input w3-border w3-round\" placeholder=\"Text to encode\" rows=\"8\" [(ngModel)]=\"textToEncrypt\" name=\"textToEncrypt\"></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t\t<input class=\"w3-input w3-border w3-round\" type=\"password\" placeholder=\"Encryption key\" [(ngModel)]=\"encryptionPassword\" name=\"encryptionPassword\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t\t<button class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" (click)=\"onClickEncrypt()\">Encode</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"w3-third w3-padding\">\r\n\t\t\t\t<button *ngIf=\"apiService.loggedIn()\" class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" (click)=\"onClickSaveKey()\">Save Key</button>\r\n\t\t\t\t<button *ngIf=\"!apiService.loggedIn()\" class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge w3-cell-row\" [disabled]=\"true\">Save Key</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Home frame -->\r\n<div class=\"w3-display-container\">\r\n  <div class=\"w3-padding-16 w3-center\">\r\n    <h2>Steganographer</h2>\r\n  </div>\r\n  <div class=\"w3-container w3-padding-large\">\r\n    <div class=\"w3-panel w3-padding-large w3-border w3-round-xlarge\">\r\n      <h4>About</h4>\r\n      <p>Steganography is an ancient practice of hiding secret data within other non-secret text or data.\r\n        In order to provide fast and reliable use of steganography online, a web application called\r\n        Steganographer was created. This web app can be used to encrypt and conceal a text message within a selected image,\r\n        optionally allowing the user to save the encryption password in Password Manager.</p>\r\n    </div>\r\n    <div class=\"w3-panel w3-padding-large w3-border w3-round-xlarge\">\r\n      <h4>How it works</h4>\r\n      <p>The encryption of a text message is handled by Advanced Encryption Standard (AES) algorithm,\r\n        provided by CryptoJS library. The encrypted message is then encoded inside the selected image\r\n        utilising a Least Significant Bit (LSB) replacement method. This method ensures safe, visually\r\n        untraceable embedding of the text message within the image, allowing large amounts of data to be\r\n        concealed. For example, an image sized at 1024 x 768 pixels can potentially store a text message\r\n        2359296 bits or 294912 symbols long (approximately 58982 words). Both encryption and encoding is\r\n        performed solely on the client side, meaning that at no point a plaintext message, an encryption password\r\n        or an image with a concealed message is transferred over the network.</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from './../../services/validate.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { ApiService } from './../../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private flashMessages: FlashMessagesService,\r\n    private apiService: ApiService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogin() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n\r\n    //validate that all fields are entered\r\n    if(!this.validateService.validateLogin(user)){\r\n      this.flashMessages.show(\"Please fill in all fields\", {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n\r\n    //validate alphanumeric input\r\n    if(!this.validateService.validateAlphaNumericLogin(user)){\r\n      this.flashMessages.show(\"Special symbols or empty spaces are not permitted\", {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n\r\n    //validate that password is the right length\r\n    if(!this.validateService.validateEntryLength(this.password)){\r\n      this.flashMessages.show(\"Password must be 4 to 12 symbols long\", {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n\r\n    //Authenticate user\r\n    this.apiService.authenticateUser(user).subscribe(data => {\r\n      if(data.success){\r\n        this.apiService.storeUserData(data.token, data.user);\r\n        this.router.navigate(['/home']);\r\n      } else {\r\n        this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout:3000});\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- Login frame -->\r\n<div class=\"w3-display-container\">\r\n  <div class=\"w3-padding-16 w3-center\">\r\n    <h2>Login</h2>\r\n  </div>\r\n  <div class=\"w3-container\">\r\n    <form (submit)=\"onLogin()\">\r\n      <div class=\"w3-panel w3-border w3-round-xlarge\">\r\n        <div class=\"w3-panel\">\r\n          <p>Username:</p>\r\n          <input class=\"w3-input w3-border w3-round\" type=\"text\" placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\">\r\n        </div>\r\n        <div class=\"w3-panel\">\r\n          <p>Password:</p>\r\n          <input class=\"w3-input w3-border w3-round\" type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\">\r\n        </div>\r\n      </div>\r\n      <div class=\"w3-padding-16 w3-center\">\r\n        <button class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge\" type=\"submit\">Login</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from './../../services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-passwordmanager',\r\n  templateUrl: './passwordmanager.component.html',\r\n  styleUrls: ['./passwordmanager.component.css']\r\n})\r\nexport class PasswordmanagerComponent implements OnInit {\r\n  user: any;\r\n  keyList: [any];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private flashMessages: FlashMessagesService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.getSavedDetails().subscribe( res => {\r\n      let data = {} as any;\r\n      data = res;\r\n      this.user = data.user;\r\n      this.keyList = this.user.info;\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n  }\r\n\r\n  //delete selected key from the list\r\n  onClickDelete(selectedKey){\r\n    //remove selected key\r\n    var index = this.keyList.indexOf(selectedKey);\r\n    if (index !== -1) this.keyList.splice(index, 1);\r\n    var newData = {\r\n      info: this.keyList\r\n    }\r\n    this.apiService.updateUserInfo(newData).subscribe( res => {\r\n      if(res.success){\r\n        this.flashMessages.show(res.msg, {cssClass: 'alert-success', timeout:3000});\r\n      } else{\r\n        this.flashMessages.show(res.msg, {cssClass: 'alert-danger', timeout:3000});\r\n      }\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Password Manager frame -->\r\n<div class=\"w3-display-container\">\r\n  <div *ngIf=\"user\" class=\"w3-padding-large\">\r\n    <div class=\"w3-padding-16 w3-center\">\r\n      <h2>Password Manager</h2>\r\n    </div>\r\n    <div class=\"w3-panel w3-padding-large\">\r\n      <div class=\"w3-panel\">\r\n        <h4>Welcome, {{user.name}}</h4>\r\n        <p>Password Manager contains a list of your Encryption Keys. Add new Encryption Keys from the \"Encryption\" Menu or delete the old ones below.</p>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"keyList.length>0\">\r\n      <ul>\r\n        <li *ngFor=\"let item of keyList\">\r\n          <div class=\"w3-panel w3-border w3-round-xlarge\">\r\n            <div class=\"w3-panel w3-center\">\r\n              <p>KEY:&nbsp;&nbsp;&nbsp;&nbsp; {{ item }}</p>\r\n              <div class=\"w3-center\">\r\n                <button class=\"w3-button w3-light-gray w3-text-red w3-ripple w3-margin w3-round-xxlarge\" (click)=\"onClickDelete(item)\">Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from './../../services/api.service';\r\nimport { ValidateService } from './../../services/validate.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  name: String;\r\n  username: String;\r\n  password: String;\r\n  info: String;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private flashMessages: FlashMessagesService,\r\n    private apiService: ApiService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegister() {\r\n    const user = {\r\n      name: this.name,\r\n      username: this.username,\r\n      password: this.password,\r\n      info: []\r\n    }\r\n\r\n    //validate that all fields are entered\r\n    if(!this.validateService.validateRegister(user)){\r\n      this.flashMessages.show(\"Please fill in all fields\", {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n\r\n    //restrict special symbols and spaces\r\n    if(!this.validateService.validateAlphaNumericRegister(user)){\r\n      this.flashMessages.show(\"Special symbols or empty spaces are not permitted\", {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n\r\n    //validate that password is the right length\r\n    if(!this.validateService.validateEntryLength(this.password)){\r\n      this.flashMessages.show(\"Password must be 4 to 12 symbols long\", {cssClass: 'alert-danger', timeout:3000});\r\n      return false;\r\n    }\r\n\r\n    //register user\r\n    this.apiService.registerUser(user).subscribe(data => {\r\n      if(data.success){\r\n        this.flashMessages.show(\"New user registered\", {cssClass: 'alert-success', timeout:3000});\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout:3000});\r\n        this.router.navigate(['/register']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Register frame -->\r\n<div class=\"w3-display-container\">\r\n  <div class=\"w3-padding-16 w3-center\">\r\n    <h2>Register</h2>\r\n  </div>\r\n  <div class=\"w3-container\">\r\n    <form (submit)=\"onRegister()\">\r\n      <div class=\"w3-panel w3-border w3-round-xlarge\">\r\n        <div class=\"w3-panel\">\r\n          <p>Enter your name:</p>\r\n          <input class=\"w3-input w3-border w3-round\" type=\"text\" placeholder=\"Name\" [(ngModel)]=\"name\" name=\"name\">\r\n        </div>\r\n        <div class=\"w3-panel\">\r\n          <p>Select username:</p>\r\n          <input class=\"w3-input w3-border w3-round\" type=\"text\" placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\">\r\n        </div>\r\n        <div class=\"w3-panel\">\r\n          <p>Select password:</p>\r\n          <input class=\"w3-input w3-border w3-round\" type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\">\r\n        </div>\r\n      </div>\r\n      <div class=\"w3-padding-16 w3-center\">\r\n        <button class=\"w3-button w3-light-gray w3-ripple w3-round-xxlarge\" type=\"submit\">Register</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from './../../services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { SharingService } from './../../services/sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-selection',\r\n  templateUrl: './selection.component.html',\r\n  styleUrls: ['./selection.component.css']\r\n})\r\nexport class SelectionComponent implements OnInit {\r\n  data:any = {text: \"example\"};\r\n  image1: any;\r\n  image2: any;\r\n  image3: any;\r\n  image4: any;\r\n  image5: any;\r\n  image6: any;\r\n  image7: any;\r\n  image8: any;\r\n  image9: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sharingService: SharingService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //load images from Picsum API\r\n    this.getImagesFromAPI();\r\n  }\r\n\r\n  //get image src and pass to encoding component\r\n  onClickGet(src){\r\n    this.sharingService.setImageSrc(src);\r\n    this.router.navigate(['/encoding']);\r\n  }\r\n\r\n  getImagesFromAPI(){\r\n    this.apiService.getImage(\"https://picsum.photos/1366/768\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image1 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/750/750\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image2 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/720/1024\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image3 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/720/1024\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image4 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/1366/768\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image5 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/750/750\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image6 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/750/750\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image7 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/720/1024\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image8 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.apiService.getImage(\"https://picsum.photos/1366/768\").subscribe(res => {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.image9 = reader.result;\r\n      }, false);\r\n      if (res) {\r\n        reader.readAsDataURL(res);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n}\r\n","<!-- Photo grid -->\r\n<div class=\"w3-row-padding\">\r\n\t<div class=\"w3-padding-16 w3-center\">\r\n    <h2>Image selection</h2>\r\n  </div>\r\n\t<div class=\"w3-panel w3-center w3-border w3-round-xlarge\">\r\n\t\t<p class=\"w3-padding-16\">Click the image to select for encoding:</p>\r\n\t</div>\r\n\t<br>\r\n\t<div class=\"w3-third\">\r\n\t\t<img #img1 src={{image1}} style=\"width:100%\" (click)=\"onClickGet(img1.src)\">\r\n\t\t<img #img2 src={{image2}} style=\"width:100%\" (click)=\"onClickGet(img2.src)\">\r\n\t\t<img #img3 src={{image3}} style=\"width:100%\" (click)=\"onClickGet(img3.src)\">\r\n\t</div>\r\n\r\n\t<div class=\"w3-third\">\r\n\t\t<img #img4 src={{image4}} style=\"width:100%\" (click)=\"onClickGet(img4.src)\">\r\n\t\t<img #img5 src={{image5}} style=\"width:100%\" (click)=\"onClickGet(img5.src)\">\r\n\t\t<img #img6 src={{image6}} style=\"width:100%\" (click)=\"onClickGet(img6.src)\">\r\n\t</div>\r\n\r\n\t<div class=\"w3-third\">\r\n\t\t<img #img7 src={{image7}} style=\"width:100%\" (click)=\"onClickGet(img7.src)\">\r\n\t\t<img #img8 src={{image8}} style=\"width:100%\" (click)=\"onClickGet(img8.src)\">\r\n\t\t<img #img9 src={{image9}} style=\"width:100%\" (click)=\"onClickGet(img9.src)\">\r\n\t</div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"]}